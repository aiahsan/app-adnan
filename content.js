function wordCount(word) {
  console.log(word, 'word');
  return word.trim().split(/\s+/).length;
}
function characterdCount(word) {
  return word.replace(/\s/g, '').length;
}
const APIKey =
  'EQU32VLUUO5BOMO5RO7HRRTUIUGTDLS23NJAUYDV7SNXU7K2LRFR5QL9O59MT93K8TEVY69XV69G71WEEMZGJ7G42Q7LLY2A00PD';
const getUsers = () => {
  axios
    .get('https://reqres.in/api/users')
    .then((response) => {
      const users = response.data.data;
      console.log(`GET users`, users);
    })
    .catch((error) => console.error(error));
};

const backSvg = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g data-name="Layer 2"><g data-name="arrow-back"><rect width="24" height="24" opacity="0" transform="rotate(90 12 12)"/><path fill="#d1d1d1" d="M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23 1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2z"/></g></g></svg>`;
const moreSvg = `
<svg
width='3'
height='13'
viewBox='0 0 3 13'
fill='none'
xmlns='http://www.w3.org/2000/svg'
>
<path
  fillRule='evenodd'
  clipRule='evenodd'
  d='M1.07573 0.0264375C1.01042 0.0389826 0.866146 0.0939916 0.755119 0.148661C0.394892 0.326063 0.14529 0.643693 0.0420524 1.05608C-0.0389795 1.3798 -0.00335602 1.68668 0.152842 2.01098C0.361549 2.44428 0.868972 2.76359 1.34885 2.76359C1.82872 2.76359 2.33614 2.44428 2.54485 2.01098C2.70105 1.68668 2.73667 1.3798 2.65564 1.05608C2.55231 0.643353 2.30249 0.325578 1.94257 0.149073C1.65058 0.00588499 1.38122 -0.0322112 1.07573 0.0264375ZM1.06386 4.86483C0.550544 4.97788 0.139566 5.40208 0.0308664 5.93103C-0.0338499 6.24597 0.00445739 6.53164 0.15258 6.83918C0.363282 7.27666 0.864721 7.59234 1.34885 7.59234C1.83297 7.59234 2.33441 7.27666 2.54511 6.83918C2.69323 6.53164 2.73154 6.24597 2.66683 5.93103C2.55694 5.39628 2.14534 4.97574 1.62196 4.86347C1.41869 4.81986 1.26632 4.82025 1.06386 4.86483ZM1.06386 9.69344C0.685771 9.7763 0.3188 10.0646 0.152842 10.4092C-0.00335602 10.7335 -0.0389795 11.0404 0.0420524 11.3641C0.145503 11.7774 0.394418 12.0936 0.757684 12.2732C1.1537 12.469 1.54399 12.469 1.94001 12.2732C2.30327 12.0936 2.55219 11.7774 2.65564 11.3641C2.71128 11.1417 2.71409 10.9899 2.66683 10.7598C2.55777 10.2291 2.14062 9.80285 1.62196 9.69208C1.41872 9.64867 1.26634 9.64903 1.06386 9.69344Z'
  fill='#0D1841'
/>
</svg>
`;

const ideaSvg = `        <svg
width='14'
height='14'
viewBox='0 0 14 14'
fill='none'
xmlns='http://www.w3.org/2000/svg'
>
<path
  fillRule='evenodd'
  clipRule='evenodd'
  d='M0 6.27539V12.5508H2.78906H5.57812V13.2754V14H7H8.42188V13.2754V12.5508H11.2109H14V6.27539V0H7H0V6.27539ZM8.22246 0.84082C8.21628 0.852113 7.89986 1.4058 7.51929 2.07129L6.82738 3.28125H3.82383H0.820312V2.05078V0.820312H4.527C6.56567 0.820312 8.22864 0.829527 8.22246 0.84082ZM10.2539 0.83084C10.2539 0.836637 9.94183 1.38726 9.56039 2.05447L8.86687 3.26758L8.32677 3.27502C7.87339 3.28122 7.78903 3.2763 7.80134 3.24423C7.82135 3.19203 9.13259 0.897285 9.16683 0.854492C9.18704 0.829254 9.333 0.820312 9.72404 0.820312C10.0155 0.820312 10.2539 0.825043 10.2539 0.83084ZM13.1797 2.05078V3.28125H11.498C10.5731 3.28125 9.81641 3.27482 9.81641 3.26698C9.81641 3.25544 10.6406 1.81037 11.1066 1.00488L11.2133 0.820312H12.1965H13.1797V2.05078ZM1.69531 2.05078V2.46094H2.10547H2.51562V2.05078V1.64062H2.10547H1.69531V2.05078ZM3.39062 2.05078V2.46094H3.80078H4.21094V2.05078V1.64062H3.80078H3.39062V2.05078ZM5.11328 2.05078V2.46094H5.52344H5.93359V2.05078V1.64062H5.52344H5.11328V2.05078ZM13.1797 7.91602V11.7305H10.8008H8.42188L8.42229 11.6143C8.42286 11.4442 8.4963 11.1603 8.57402 11.0278C8.61126 10.9642 8.72818 10.819 8.83384 10.705C9.32441 10.1759 9.54507 9.62451 9.54507 8.92773C9.54507 8.24471 9.31563 7.66626 8.84825 7.17079C8.43896 6.73693 7.90418 6.47079 7.28437 6.3925C6.62052 6.30864 5.86589 6.54071 5.33922 6.99068C4.91515 7.35295 4.58361 7.92941 4.48427 8.47708C4.44073 8.71721 4.4482 9.20161 4.49922 9.44932C4.5978 9.92764 4.80304 10.3112 5.17888 10.7193C5.29274 10.8429 5.41568 11.0072 5.4521 11.0844C5.52079 11.2298 5.57812 11.4825 5.57812 11.6398V11.7305H3.19922H0.820312V7.91602V4.10156H7H13.1797V7.91602ZM6.58984 5.22266V5.63281H7H7.41016V5.22266V4.8125H7H6.58984V5.22266ZM3.97119 6.02293L3.69141 6.30366L3.98582 6.59717L4.28023 6.89068L4.56638 6.60354L4.85253 6.31641L4.56641 6.0293C4.40904 5.87139 4.27369 5.74219 4.26562 5.74219C4.25756 5.74219 4.12508 5.86852 3.97119 6.02293ZM9.43359 6.0293L9.14747 6.31641L9.43359 6.60352L9.71975 6.89065L10.0005 6.61084C10.1549 6.45695 10.2812 6.31829 10.2812 6.30271C10.2812 6.27503 9.76046 5.74219 9.73339 5.74219C9.72587 5.74219 9.59096 5.87139 9.43359 6.0293ZM7.34852 7.23469C7.99944 7.36914 8.51446 7.85873 8.68098 8.50134C8.73163 8.69679 8.73942 9.11378 8.69602 9.30737C8.62146 9.64007 8.48105 9.88332 8.1643 10.2285C8.05782 10.3445 7.92985 10.5074 7.87989 10.5904C7.71657 10.8621 7.60367 11.2782 7.60211 11.6143L7.60156 11.7305H7H6.39844V11.611C6.39844 11.4153 6.32037 11.0273 6.24493 10.8481C6.14655 10.6143 6.01472 10.4167 5.8152 10.2038C5.41748 9.77946 5.27327 9.4386 5.27384 8.92421C5.27442 8.43713 5.44603 8.03414 5.80215 7.68357C6.20736 7.2847 6.78245 7.11774 7.34852 7.23469ZM2.87109 8.85938V9.26953H3.28125H3.69141V8.85938V8.44922H3.28125H2.87109V8.85938ZM10.3086 8.85938V9.26953H10.7188H11.1289V8.85938V8.44922H10.7188H10.3086V8.85938ZM7.60156 12.8652V13.1797H7H6.39844V12.8652V12.5508H7H7.60156V12.8652Z'
  fill="#0D1841"
/>
</svg>
`;

const idcardSvg = `      <svg
          width='11'
          height='15'
          viewBox='0 0 11 15'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            d='M5.11343 4.44671L5.11343 4.44671C4.57319 4.54864 4.14469 4.80778 3.8581 5.17485C3.57147 5.54197 3.42215 6.02301 3.45094 6.57679L3.45094 6.5768C3.46338 6.81652 3.48024 6.9634 3.51849 7.09157L5.11343 4.44671ZM5.11343 4.44671C6.04732 4.27045 7.03011 4.78761 7.4318 5.67031C7.54276 5.91426 7.5703 6.09752 7.54904 6.55156L7.54904 6.55158C7.53719 6.80561 7.52163 6.95648 7.48435 7.08566C7.4476 7.21304 7.38807 7.32502 7.27742 7.49807C7.17887 7.65219 7.11325 7.76692 7.08451 7.8519C7.07011 7.89447 7.06039 7.94218 7.07018 7.98917C7.08137 8.04286 7.11452 8.08036 7.15508 8.10344L7.1551 8.10345C7.98474 8.57513 8.59223 9.51791 8.67659 10.4639L8.69111 10.6269M5.11343 4.44671L8.69111 10.6269M8.69111 10.6269L8.2747 10.6448L7.8402 10.6635L7.8014 10.4588C7.80139 10.4588 7.80139 10.4588 7.80139 10.4588C7.51281 8.93504 5.98659 8.09199 4.57333 8.68309C4.20334 8.83781 3.85214 9.14762 3.59391 9.50018C3.33651 9.85158 3.16071 10.2603 3.16071 10.6201C3.16071 10.6297 3.16033 10.6364 3.15991 10.6409C3.1579 10.6415 3.15545 10.6421 3.1525 10.6428C3.12789 10.6486 3.08618 10.6525 3.01513 10.6528C2.94554 10.6531 2.85456 10.6502 2.73461 10.6451L2.30817 10.6269L2.32787 10.3868C2.38581 9.68126 2.87361 8.81429 3.48064 8.34732C3.56787 8.28023 3.65593 8.21648 3.72722 8.16802C3.76293 8.14375 3.79372 8.12379 3.81769 8.10931C3.83881 8.09656 3.84975 8.09112 3.85296 8.08952C3.85389 8.08906 3.85417 8.08892 3.85385 8.08902L3.82297 7.99391M8.69111 10.6269L3.82297 7.99391M3.82297 7.99391L3.85375 8.08906C3.90262 8.07325 3.92396 8.03289 3.93103 8.00418C3.93736 7.97848 3.9353 7.95374 3.93272 7.93657C3.92731 7.90054 3.91316 7.85875 3.89578 7.8168C3.86011 7.73075 3.80062 7.6201 3.72658 7.50433L3.82297 7.99391ZM6.38884 7.19899C6.56515 7.00379 6.67411 6.80862 6.70443 6.59632C6.73478 6.38379 6.68433 6.16806 6.56859 5.93564L6.56859 5.93563C6.49916 5.79623 6.42964 5.68829 6.34138 5.60039C6.25254 5.51191 6.14963 5.4486 6.02015 5.39146M6.38884 7.19899L6.31463 7.13197L6.38885 7.19898C6.38884 7.19899 6.38884 7.19899 6.38884 7.19899ZM6.38884 7.19899C5.74411 7.91298 4.61472 7.65094 4.33029 6.72816L4.33028 6.72814C4.29001 6.5974 4.2679 6.49465 4.27823 6.3806C4.28831 6.26943 4.32858 6.15591 4.39331 6.00201L4.39332 6.00198C4.4557 5.8538 4.51672 5.74249 4.60399 5.64994C4.69127 5.55737 4.79873 5.49001 4.94284 5.41922L4.94285 5.41922C5.15545 5.31482 5.31551 5.25304 5.48172 5.24867C5.64838 5.2443 5.80843 5.29796 6.02015 5.39146M6.02015 5.39146L5.97976 5.48293L6.02014 5.39145C6.02014 5.39145 6.02015 5.39145 6.02015 5.39146ZM0.857085 1.39662L0.857114 1.3966C0.950391 1.34327 1.01379 1.3076 1.08386 1.28062C1.15238 1.25424 1.23056 1.23505 1.35067 1.22084C1.59588 1.19184 1.99703 1.18533 2.81044 1.17306C3.59519 1.16119 4.00936 1.15377 4.226 1.12996C4.28093 1.12392 4.32665 1.1165 4.36421 1.1067C4.40114 1.09706 4.43627 1.08361 4.46554 1.062C4.49767 1.03829 4.51842 1.00794 4.52925 0.973509C4.53878 0.943246 4.53929 0.913456 4.53929 0.893865C4.53929 0.787757 4.59259 0.655144 4.69164 0.527435C4.78953 0.401228 4.92419 0.290347 5.06944 0.225318C5.26291 0.13876 5.37252 0.10268 5.47761 0.100143C5.58278 0.0976044 5.69446 0.128382 5.89282 0.205551L5.89283 0.205554C6.03878 0.262317 6.18318 0.375397 6.29104 0.508383C6.40044 0.643266 6.46071 0.784023 6.46071 0.891115C6.46071 0.930257 6.46121 1.00574 6.53142 1.0599C6.5606 1.08241 6.5958 1.09631 6.63261 1.10618C6.67001 1.11622 6.71555 1.12375 6.77024 1.12986C6.9858 1.15391 7.40015 1.16111 8.18956 1.17306C9.00297 1.18533 9.40412 1.19184 9.64933 1.22084C9.76944 1.23505 9.84762 1.25424 9.91614 1.28062C9.98621 1.3076 10.0496 1.34327 10.1429 1.3966L10.1429 1.39662C10.369 1.52579 10.5637 1.71523 10.6962 1.93442L10.6962 1.93444L10.9 2.27135V8.04883V13.8263L10.6962 14.1632L10.6962 14.1632C10.5637 14.3824 10.369 14.5719 10.1429 14.701L10.1429 14.7011L9.79487 14.9H5.5H1.20513L0.857105 14.7011L0.857085 14.701C0.630991 14.5719 0.436267 14.3824 0.303773 14.1632L0.303761 14.1632L0.1 13.8263V8.04883V2.27135L0.303761 1.93444L0.303773 1.93442C0.436267 1.71523 0.630991 1.52579 0.857085 1.39662ZM5.97319 2.99062L5.97318 2.99063C5.67406 3.14102 5.31304 3.11439 5.02455 2.96922C4.73512 2.82357 4.53929 2.57044 4.53929 2.28547V2.28462C4.53929 2.24756 4.5393 2.1734 4.47376 2.11949C4.44542 2.09617 4.41125 2.08216 4.37626 2.07254C4.34082 2.06279 4.2981 2.05587 4.24753 2.05057C4.04875 2.02977 3.6673 2.02888 2.94289 2.02888C2.20467 2.02888 1.82241 2.02909 1.60241 2.05351C1.49054 2.06592 1.41083 2.08541 1.34399 2.11962C1.27757 2.15361 1.23099 2.19891 1.1843 2.24432L1.18392 2.2447L1.18389 2.24472L0.991022 2.43215L0.960714 2.4616V2.50386V8.04883V13.5938V13.6361L0.991022 13.6655L1.18389 13.8529L1.18392 13.853L1.3767 14.0405L1.40581 14.0688H1.44642H5.5H9.55358H9.59419L9.6233 14.0405L9.81608 13.853L9.81611 13.8529L10.009 13.6655L10.0393 13.6361V13.5938V8.04883V2.50386V2.4616L10.009 2.43215L9.81611 2.24472L9.81608 2.2447L9.8157 2.24432C9.76902 2.19891 9.72243 2.15361 9.65601 2.11962C9.58917 2.08541 9.50946 2.06592 9.39759 2.05351C9.17759 2.02909 8.79533 2.02888 8.05711 2.02888H6.56071H6.4609L6.46071 2.1287L6.4604 2.30057V2.30059C6.46025 2.39707 6.40517 2.53765 6.30812 2.67709C6.21236 2.81467 6.08852 2.93265 5.97319 2.99062ZM5.09489 4.34844C3.97147 4.56041 3.29128 5.4316 3.35107 6.58198L5.09489 4.34844ZM5.5 12.7612H2.29559L2.27664 12.3411L2.27664 12.3411L2.25816 11.93H5.5H8.74184L8.72336 12.3411L8.72336 12.3411L8.70441 12.7612H5.5Z'
            fill="#8190A4"
            stroke="#8190A4"
            strokeWidth='0.2'
          />
        </svg>
  `;

const cardSvg = `
 <svg
          width='14'
          height='13'
          viewBox='0 0 14 13'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            fillRule='evenodd'
            clipRule='evenodd'
            d='M1.3962 0.00852315C1.2465 0.0288091 1.01786 0.102808 0.862276 0.181351C0.497567 0.365457 0.183367 0.734246 0.0617613 1.12099L0 1.31742V6.42313V11.5288L0.0617613 11.7253C0.219477 12.2269 0.63642 12.6253 1.17861 12.7927C1.33436 12.8407 1.58781 12.8429 6.99468 12.8429C12.4059 12.8429 12.655 12.8407 12.8122 12.7925C13.3429 12.6298 13.7297 12.2672 13.9156 11.7583L13.9894 11.5562L13.9966 6.5124C14.0046 0.971188 14.0126 1.25623 13.8404 0.906772C13.6521 0.524432 13.3101 0.225482 12.8948 0.0801673L12.6753 0.00334902L7.07681 0.000392373C3.99765 -0.00125021 1.44137 0.0024182 1.3962 0.00852315ZM12.6753 0.928646C12.8132 0.990653 12.9774 1.14777 13.0529 1.29004C13.1002 1.37902 13.1131 1.45989 13.1219 1.72122L13.1328 2.04289H6.99468H0.856582L0.867423 1.72122C0.879961 1.34879 0.917878 1.24881 1.11559 1.06657C1.22444 0.966234 1.31259 0.921911 1.47833 0.884186C1.50844 0.877342 4.01544 0.873455 7.04944 0.875563C12.2966 0.879204 12.5711 0.881805 12.6753 0.928646ZM13.1205 7.18282L13.1133 11.4467L13.054 11.5574C12.9761 11.703 12.7797 11.8817 12.6456 11.929C12.4854 11.9856 1.50393 11.9856 1.34375 11.929C1.20963 11.8817 1.01328 11.703 0.935344 11.5574L0.876046 11.4467L0.868874 7.18282L0.861674 2.91894H6.99468H13.1277L13.1205 7.18282ZM2.44644 4.13903C2.15162 4.22978 1.88832 4.49763 1.79269 4.80395C1.74588 4.954 1.7384 5.05625 1.7384 5.54708C1.7384 6.03791 1.74588 6.14016 1.79269 6.29021C1.89018 6.6025 2.15338 6.8663 2.45772 6.95667C2.66069 7.01695 5.49514 7.01829 5.69477 6.9582C5.97773 6.87303 6.23748 6.6201 6.3567 6.31362C6.42783 6.13077 6.42783 4.96339 6.3567 4.78054C6.23748 4.47406 5.97773 4.22113 5.69477 4.13596C5.50185 4.0779 2.63619 4.08061 2.44644 4.13903ZM8.44566 4.70148C8.40802 4.71664 8.34834 4.75606 8.313 4.78903C8.10165 4.98636 8.12834 5.29533 8.37235 5.47612C8.44889 5.53284 8.46672 5.53339 10.2114 5.53339C11.9481 5.53339 11.9743 5.5326 12.0488 5.47694C12.1924 5.36968 12.2373 5.28219 12.2373 5.10906C12.2373 4.93593 12.1925 4.84843 12.0488 4.74117C11.9745 4.68568 11.9435 4.68464 10.2436 4.6793C9.13196 4.67582 8.48963 4.68374 8.44566 4.70148ZM5.50111 5.03303C5.53552 5.08215 5.54373 5.18119 5.54373 5.54708C5.54373 5.91297 5.53552 6.01201 5.50111 6.06113L5.45851 6.12199H4.0795C2.86234 6.12199 2.69543 6.11695 2.65746 6.07898C2.59359 6.01508 2.59359 5.07908 2.65746 5.01518C2.69543 4.97721 2.86234 4.97217 4.0795 4.97217H5.45851L5.50111 5.03303ZM8.41848 7.05897C8.23796 7.15036 8.16434 7.27453 8.17768 7.46521C8.19021 7.64469 8.26361 7.7643 8.40131 7.82965C8.48465 7.86918 8.68499 7.87408 10.2183 7.87408H11.9417L12.0322 7.81248C12.1632 7.72332 12.2277 7.62328 12.2433 7.48506C12.2612 7.32644 12.1799 7.1633 12.0396 7.07608L11.9361 7.01172L10.2388 7.00422L8.54145 6.99669L8.41848 7.05897ZM2.49126 8.21305C2.18642 8.31125 1.96985 8.49804 1.83682 8.7775L1.75209 8.95545V9.64046V10.3255L1.84172 10.5075C1.95279 10.7331 2.16912 10.9387 2.38868 11.0272C2.54511 11.0903 2.55414 11.0908 3.96959 11.0994C4.96573 11.1055 5.44249 11.0986 5.55742 11.0765C5.88432 11.0136 6.1502 10.8185 6.29308 10.5365C6.40346 10.3187 6.42676 10.1239 6.41386 9.5268C6.40346 9.04464 6.39511 8.96495 6.34058 8.82549C6.25494 8.60662 6.05055 8.39067 5.82283 8.27854L5.64081 8.18891L4.12079 8.18335C2.9428 8.17902 2.57612 8.18571 2.49126 8.21305ZM5.50111 9.11212C5.53568 9.16148 5.54373 9.26215 5.54373 9.64596C5.54373 10.0825 5.53952 10.1232 5.48898 10.1737C5.4357 10.227 5.39773 10.2285 4.0852 10.2285C2.9085 10.2285 2.72836 10.223 2.67531 10.1858C2.61623 10.1445 2.61445 10.1287 2.61445 9.64731C2.61445 9.22429 2.6211 9.14405 2.65976 9.10134C2.70252 9.05409 2.78282 9.05127 4.08177 9.05127H5.45851L5.50111 9.11212ZM8.39685 9.39793C8.26227 9.46427 8.19008 9.58396 8.17768 9.76127C8.16434 9.95195 8.23796 10.0761 8.41848 10.1675L8.54145 10.2298L10.2388 10.2223L11.9361 10.2148L12.0396 10.1504C12.1799 10.0632 12.2612 9.90005 12.2433 9.74143C12.2277 9.6032 12.1632 9.50317 12.0322 9.414L11.9417 9.35241L10.2142 9.35304C8.67896 9.35358 8.47671 9.35859 8.39685 9.39793Z'
            fill="#8190A4"
          />
        </svg>
 `;

const documentSvg = `     <svg
          width='14'
          height='14'
          viewBox='0 0 14 14'
          fill="#8190A4"
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            fillRule='evenodd'
            clipRule='evenodd'
            d='M0.15218 0.16198L0 0.32403V5.3452V10.3664L0.17185 10.5381C0.33999 10.7064 0.36764 10.71 1.46685 10.71H2.59V11.8331C2.59 12.9324 2.59364 12.96 2.76185 13.1281L2.93363 13.3H7.9646H12.9956L13.1478 13.138L13.3 12.976V7.96572C13.3 3.13908 13.2951 2.94945 13.1664 2.79027C13.0371 2.63039 12.9946 2.6243 11.8714 2.60281L10.71 2.58055V1.46209C10.71 0.36792 10.7063 0.33992 10.5381 0.17185L10.3664 0H5.3354H0.30443L0.15218 0.16198ZM9.73 1.785V2.59H6.33185H2.93363L2.76185 2.76185L2.59 2.93363V6.33185V9.73H1.785H0.98V5.355V0.98H5.355H9.73V1.785ZM12.32 7.945V12.32H7.945H3.57V7.945V3.57H7.945H12.32V7.945ZM5.348 5.30355C5.20541 5.39875 5.09775 5.68176 5.14003 5.85025C5.23222 6.21747 5.38776 6.23693 8.05777 6.21509L10.5125 6.195L10.6462 6.02973C10.8189 5.81644 10.8165 5.56647 10.64 5.39C10.5051 5.25511 10.4074 5.25007 7.9625 5.25105C6.56691 5.25168 5.39035 5.27527 5.348 5.30355ZM5.348 7.54355C5.20541 7.63875 5.09775 7.92176 5.14003 8.09025C5.23222 8.45747 5.38776 8.47693 8.05777 8.45509L10.5125 8.435L10.6462 8.26973C10.8189 8.05644 10.8165 7.80647 10.64 7.63C10.5051 7.49511 10.4074 7.49007 7.9625 7.49105C6.56691 7.49168 5.39035 7.51527 5.348 7.54355ZM5.348 9.78355C5.16957 9.90269 5.09572 10.1565 5.18014 10.3604C5.32182 10.7024 5.44754 10.7169 8.07716 10.6952L10.5125 10.675L10.6462 10.5097C10.8189 10.2964 10.8165 10.0465 10.64 9.87C10.5051 9.73511 10.4074 9.73007 7.9625 9.73105C6.56691 9.73168 5.39035 9.75527 5.348 9.78355Z'
            fill="#8190A4"
          />
        </svg>`;
const writeSvg1 = `   <svg
          width='14'
          height='16'
          viewBox='0 0 14 16'
          fill="#8190A4"
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            d='M12.3352 6.46883C12.0926 6.94207 11.4426 6.91113 11.2201 6.41577C11.1952 6.36044 11.1804 5.71936 11.1695 4.2254L11.1541 2.11321L11.0563 1.91504L2.19103 1.19398C1.81486 1.26531 1.46902 1.53537 1.29251 1.89297L1.19465 2.09123L1.18948 2.1017V2.11336V7.82169V13.53V13.5417L1.19465 13.5521L1.29251 13.7504C1.46902 14.108 1.81486 14.3781 2.19103 14.4494C2.21827 14.4546 2.27416 14.4588 2.34833 14.4625C2.424 14.4663 2.52243 14.4696 2.63735 14.4724C2.86723 14.4781 3.164 14.4815 3.47851 14.4815C4.07786 14.4815 4.38531 14.483 4.56449 14.5035C4.65317 14.5137 4.7063 14.5282 4.74616 14.5473C4.78579 14.5664 4.81569 14.5915 4.85709 14.6301L4.89119 14.5936L4.85709 14.6301C5.16448 14.9169 5.04005 15.4604 4.64348 15.5785C4.63061 15.5823 4.59495 15.587 4.52849 15.5908C4.46429 15.5945 4.37633 15.5972 4.26305 15.599C4.03656 15.6024 3.7107 15.602 3.27493 15.5977C2.57267 15.5907 2.22422 15.587 1.99407 15.5594C1.76867 15.5323 1.65951 15.4827 1.43362 15.3785L1.41268 15.4239M12.3352 6.46883C12.3908 6.36047 12.3935 6.25906 12.3935 4.241C12.3935 2.40811 12.3869 2.09791 12.3442 1.91027C12.1395 1.01018 11.4969 0.339224 10.5727 0.0605119C10.3998 0.00836824 10.1497 0.00487975 6.28861 0.00071805C4.03333 -0.00169941 2.1468 0.00218689 2.0963 0.00937807C1.26424 0.127834 0.52116 0.699364 0.191284 1.47451C0.165221 1.53576 0.142698 1.58234 0.123237 1.63016C-0.00941263 1.95613 0.000151927 2.33996 0.000151927 7.82169C0.000151927 13.3034 -0.00941264 13.6873 0.123237 14.0132C0.142698 14.061 0.165221 14.1076 0.191284 14.1689C0.42896 14.7274 0.857708 15.168 1.41268 15.4239M12.3352 6.46883L12.2907 6.44601C12.3125 6.40349 12.3275 6.3625 12.3352 6.06975C12.3428 5.77943 12.3435 5.25044 12.3435 4.241C12.3435 3.32438 12.3418 2.7892 12.3349 2.45972C12.3279 2.12941 12.3156 2.00964 12.2955 1.92136C12.095 1.03978 11.4662 0.382194 10.5583 0.108382C10.48 0.0847827 10.3823 0.0705618 9.81303 0.0626169C9.24666 0.0547123 8.21928 0.0527991 6.28855 0.050718C5.16095 0.0495093 4.12555 0.0498766 3.36576 0.0514447C2.98586 0.0522288 2.67491 0.0533131 2.45581 0.0546503C2.34624 0.055319 2.25973 0.0560504 2.19909 0.0568379C2.16874 0.057232 2.14501 0.0576383 2.12816 0.058054C2.11433 0.0583952 2.10715 0.0587201 2.10452 0.0588391C2.10358 0.0588818 2.10322 0.058898 2.10335 0.058879C1.28867 0.17486 0.560335 0.735 0.237292 1.49409M12.3352 6.46883L12.2907 6.44602C12.0688 6.87887 11.4727 6.85548 11.2658 6.39564L0.237292 1.49409M1.41268 15.4239L1.43362 15.3785C0.889835 15.1277 0.470071 14.6963 0.237292 14.1493C0.224642 14.1196 0.213065 14.0937 0.202415 14.0699C0.168664 13.9946 0.144212 13.94 0.12434 13.8485C0.0979526 13.7271 0.0804644 13.5421 0.0693045 13.1715C0.0496146 12.5176 0.049766 11.2975 0.0500692 8.85472C0.0501093 8.53219 0.0501519 8.18835 0.0501519 7.82169C0.0501519 7.45503 0.0501093 7.11119 0.0500692 6.78866C0.049766 4.34592 0.0496146 3.12577 0.0693045 2.47188C0.0804644 2.10127 0.0979526 1.91629 0.12434 1.79487C0.144212 1.70343 0.168664 1.64882 0.202415 1.57345C0.213065 1.54967 0.224641 1.52382 0.237292 1.49409M1.41268 15.4239L0.237292 1.49409M2.80818 3.77337L2.80818 3.77336L2.93223 3.70999H6.18897C7.6297 3.70999 8.44983 3.7114 8.9223 3.71802C9.15868 3.72133 9.30709 3.72593 9.40234 3.73224C9.49957 3.73867 9.53549 3.74667 9.55182 3.75349C10.012 3.94578 10.012 4.59823 9.55182 4.79051C9.53549 4.79733 9.49957 4.80533 9.40234 4.81177C9.30709 4.81807 9.15868 4.82268 8.9223 4.82599C8.44983 4.83261 7.6297 4.83402 6.18897 4.83402H2.93223L2.80819 4.77065C2.80819 4.77064 2.80818 4.77064 2.80818 4.77064C2.74036 4.73597 2.64321 4.65664 2.59622 4.59758L2.59621 4.59758C2.55347 4.54387 2.53602 4.51686 2.52628 4.47973C2.51565 4.43918 2.51351 4.38413 2.51351 4.272C2.51351 4.15988 2.51565 4.10483 2.52628 4.06428C2.53602 4.02714 2.55347 4.00014 2.59621 3.94642L2.59622 3.94642C2.64321 3.88735 2.74037 3.808 2.80818 3.77337ZM2.59621 6.39449L2.59622 6.39448C2.64321 6.33542 2.74036 6.2561 2.80818 6.22143C2.80818 6.22142 2.80819 6.22142 2.80819 6.22142L2.93223 6.15805H6.18897C7.6297 6.15805 8.44983 6.15946 8.9223 6.16608C9.15868 6.16939 9.30709 6.17399 9.40234 6.1803C9.49957 6.18673 9.53549 6.19473 9.55182 6.20155C10.012 6.39384 10.012 7.04629 9.55182 7.23857C9.53549 7.24539 9.49957 7.25339 9.40234 7.25983C9.30709 7.26613 9.15868 7.27074 8.9223 7.27405C8.44983 7.28067 7.6297 7.28208 6.18897 7.28208H2.93223L2.80819 7.21871C2.80819 7.2187 2.80818 7.2187 2.80818 7.2187C2.74036 7.18403 2.64321 7.1047 2.59622 7.04565L2.59621 7.04564C2.55347 6.99193 2.53602 6.96492 2.52628 6.92779C2.51565 6.88724 2.51351 6.83219 2.51351 6.72006C2.51351 6.60794 2.51565 6.55289 2.52628 6.51234C2.53602 6.4752 2.55347 6.4482 2.59621 6.39449ZM11.1971 8.66745L11.1694 8.62582L11.1971 8.66745C11.3817 8.54465 11.5961 8.45284 11.8076 8.4058C12.5168 8.24809 13.2598 8.54596 13.6638 9.14996C13.7786 9.32162 13.8492 9.45768 13.8919 9.60593C13.9346 9.75452 13.95 9.9185 13.95 10.1473C13.95 10.4675 13.9387 10.5541 13.8806 10.7224C13.8463 10.8217 13.8137 10.9026 13.7558 10.9974C13.6976 11.0928 13.6129 11.2038 13.4733 11.3615C13.1936 11.6774 12.6995 12.174 11.7711 13.0993L10.0257 14.8389L9.8383 14.8991L9.8536 14.9467L9.8383 14.8991C9.60769 14.9732 8.99753 15.1439 8.42634 15.298C8.141 15.375 7.86588 15.4478 7.65342 15.5021C7.54716 15.5293 7.45676 15.5519 7.38865 15.568C7.3187 15.5846 7.27627 15.5935 7.26286 15.5948C7.09306 15.6118 6.91824 15.5321 6.7899 15.3708C6.75393 15.3256 6.73424 15.2932 6.72158 15.2557C6.70856 15.2171 6.70184 15.1699 6.69732 15.093C6.69269 15.0142 6.69753 14.943 6.7463 14.7521C6.79537 14.5599 6.88771 14.251 7.05611 13.6975C7.15837 13.3613 7.25764 13.0437 7.33519 12.8027C7.37397 12.6822 7.40727 12.5811 7.43276 12.5064C7.45905 12.4295 7.47549 12.3855 7.48103 12.3749L7.48104 12.3749C7.48082 12.3753 7.4809 12.3752 7.48145 12.3744C7.48253 12.3729 7.48546 12.3689 7.49156 12.3615C7.49953 12.3518 7.51073 12.3389 7.52517 12.3227C7.55399 12.2905 7.59455 12.2468 7.64541 12.1931C7.74705 12.0856 7.88886 11.9391 8.0579 11.7664C8.39593 11.421 8.84223 10.9715 9.29243 10.5221C9.74263 10.0727 10.1966 9.6236 10.5499 9.27888C10.7266 9.1065 10.878 8.96036 10.9912 8.85341C11.0478 8.79991 11.0946 8.75639 11.1301 8.72436C11.1669 8.69121 11.1888 8.67297 11.1971 8.66745ZM12.4631 10.7323L12.4976 10.7668L12.5329 10.7332L12.6209 10.6497C12.9816 10.3072 12.889 9.72574 12.4362 9.53657C12.1869 9.43239 11.8956 9.50435 11.7003 9.71221L11.6097 9.80866L11.5765 9.84395L11.6107 9.87822L12.0369 10.3052L12.4631 10.7323ZM9.39262 13.8647L9.4053 13.8612L9.41462 13.8518L10.5468 12.7212L11.6789 11.5905L11.7144 11.555L11.6788 11.5196L11.2505 11.0936L10.8222 10.6675L10.7871 10.6326L10.7518 10.6674L9.61329 11.7895L8.47476 12.9117L8.4657 12.9206L8.46201 12.9328L8.2811 13.5295C8.2313 13.6937 8.18661 13.8439 8.15472 13.9535C8.13878 14.0082 8.12598 14.0531 8.11732 14.0845C8.11301 14.1002 8.10964 14.1129 8.10739 14.122C8.1063 14.1264 8.10532 14.1306 8.10463 14.1341C8.10449 14.1348 8.10432 14.1357 8.10415 14.1368C8.10393 14.138 8.10372 14.1395 8.10355 14.141C8.1035 14.1415 8.10342 14.1423 8.10335 14.1433C8.10326 14.1447 8.10318 14.1465 8.10324 14.1485C8.10329 14.1502 8.10345 14.1534 8.10424 14.1573C8.10483 14.1602 8.10678 14.1691 8.11369 14.178L8.11397 14.1784C8.12249 14.1892 8.13291 14.1934 8.13692 14.1948C8.14175 14.1965 8.14581 14.1971 8.14789 14.1973C8.15213 14.1978 8.15558 14.1976 8.15697 14.1976C8.16017 14.1974 8.16306 14.197 8.16469 14.1967C8.16839 14.1961 8.17279 14.1953 8.17728 14.1943C8.18654 14.1923 8.1995 14.1893 8.21544 14.1854C8.24747 14.1775 8.29317 14.1657 8.34905 14.151C8.46089 14.1216 8.61428 14.08 8.78226 14.0335L9.39262 13.8647ZM2.59622 9.49371L2.55709 9.52484L2.59621 9.4937C2.55347 9.43999 2.53602 9.41299 2.52628 9.37585C2.51565 9.3353 2.51351 9.28025 2.51351 9.16812C2.51351 9.056 2.51565 9.00095 2.52628 8.9604C2.53602 8.92326 2.55347 8.89626 2.59621 8.84255L2.55709 8.81141L2.59622 8.84254C2.64321 8.78348 2.74037 8.70415 2.80819 8.66948L2.93222 8.60611L4.9563 8.60678C5.91497 8.6071 6.42494 8.60811 6.70976 8.61568C6.99665 8.6233 7.04694 8.6378 7.09382 8.6595C7.5359 8.86416 7.5359 9.47208 7.09382 9.67675C7.04694 9.69845 6.99665 9.71295 6.70976 9.72057C6.42494 9.72814 5.91497 9.72915 4.9563 9.72947L2.93222 9.73014L2.80819 9.66677C2.74037 9.6321 2.64321 9.55277 2.59622 9.49371Z'
            fill="#8190A4"
            stroke='white'
            strokeWidth='0.1'
          />
        </svg>`;

const helpSvg = `    <svg
          width='14'
          height='14'
          viewBox='0 0 14 14'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <circle cx='7' cy='7' r='6.5' fill='white' stroke='#8190A4' />
          <path
            d='M6.53317 3C5.13639 3 4 4.13639 4 5.53317C4 5.85838 4.26365 6.12203 4.58886 6.12203C4.91407 6.12203 5.17772 5.85838 5.17772 5.53317C5.17772 4.78578 5.78578 4.17772 6.53317 4.17772C7.28055 4.17772 7.88861 4.78578 7.88861 5.53317C7.88861 6.28055 7.28055 6.88861 6.53317 6.88861C6.20796 6.88861 5.9443 7.15226 5.9443 7.47747V8.80889C5.9443 9.1341 6.20796 9.39775 6.53317 9.39775C6.85838 9.39775 7.12203 9.1341 7.12203 8.80889V7.99724C8.2358 7.73111 9.06633 6.72726 9.06633 5.53313C9.06633 4.13639 7.92995 3 6.53317 3Z'
            fill='#8190A4'
          />
          <path
            d='M6.53369 11.6347C6.98897 11.6347 7.35806 11.2656 7.35806 10.8103C7.35806 10.355 6.98897 9.98596 6.53369 9.98596C6.0784 9.98596 5.70932 10.355 5.70932 10.8103C5.70932 11.2656 6.0784 11.6347 6.53369 11.6347Z'
            fill='#8190A4'
          />
        </svg>`;
const settingSvg = ` <svg
          width='14'
          height='14'
          viewBox='0 0 14 14'
          fill='none'
          xmlns='http://www.w3.org/2000/svg'
        >
          <path
            fillRule='evenodd'
            clipRule='evenodd'
            d='M6.13699 0.0165803C6.00055 0.0511699 5.82921 0.150475 5.72318 0.256462C5.54595 0.433654 5.50118 0.57686 5.42 1.22634C5.3797 1.54893 5.33553 1.82762 5.32186 1.84569C5.30816 1.86374 5.25175 1.89269 5.19644 1.90997C5.14115 1.92728 4.9689 1.99725 4.8137 2.0655L4.53151 2.18953L4.43014 2.10932C3.95507 1.73327 3.59638 1.46759 3.49315 1.41525C3.32485 1.32994 3.05882 1.31277 2.84726 1.37354C2.69052 1.41857 2.66307 1.44204 2.05016 2.05471C1.43726 2.66738 1.41378 2.69482 1.36874 2.8515C1.30778 3.0635 1.3251 3.3291 1.41082 3.49715C1.4454 3.56493 1.62192 3.81141 1.80312 4.04488C1.98433 4.27836 2.14419 4.48461 2.15838 4.50323C2.17575 4.52607 2.14386 4.62872 2.06052 4.81818C1.99249 4.97278 1.92268 5.14452 1.90537 5.19979C1.88808 5.25508 1.85912 5.31144 1.84107 5.32508C1.82299 5.33872 1.54318 5.38333 1.21921 5.42425C0.567726 5.50649 0.427315 5.55034 0.251041 5.72652C0.195836 5.7817 0.116767 5.89114 0.0753425 5.96971L0 6.11259V6.98897V7.86535L0.0717808 8.01833C0.11126 8.10249 0.190329 8.21809 0.247479 8.27525C0.42874 8.45641 0.568904 8.50056 1.22148 8.58206C1.54419 8.62235 1.82299 8.6665 1.84107 8.68016C1.85912 8.69385 1.88808 8.75024 1.90537 8.80554C1.92268 8.8608 1.99249 9.03255 2.06052 9.18715C2.14386 9.37661 2.17575 9.47925 2.15838 9.5021C2.14419 9.52072 1.98433 9.72697 1.80312 9.96044C1.62192 10.1939 1.4454 10.4404 1.41082 10.5082C1.32482 10.6768 1.30773 10.9421 1.36921 11.1538C1.41433 11.3092 1.44148 11.3414 2.00953 11.9141C2.71721 12.6276 2.76205 12.6575 3.12329 12.6576C3.33027 12.6576 3.38953 12.6472 3.4923 12.5926C3.58934 12.5411 3.96458 12.2619 4.50036 11.8425C4.52449 11.8236 4.59899 11.8447 4.74693 11.9121C4.86351 11.9653 5.04263 12.0378 5.14493 12.0733C5.27918 12.1198 5.33414 12.1529 5.34238 12.1925C5.34868 12.2226 5.38548 12.4994 5.42414 12.8077C5.50244 13.4315 5.54803 13.5738 5.72693 13.7526C5.78411 13.8097 5.89975 13.8888 5.98395 13.9282L6.13699 14H7H7.86301L8.01606 13.9282C8.10025 13.8888 8.21589 13.8097 8.27307 13.7526C8.45444 13.5713 8.49849 13.4314 8.57967 12.779C8.61981 12.4564 8.66608 12.1787 8.68249 12.1618C8.6989 12.1449 8.80479 12.0968 8.91781 12.055C9.03082 12.0131 9.19666 11.9423 9.2863 11.8977C9.48016 11.8011 9.41556 11.772 9.9726 12.2064C10.1986 12.3827 10.439 12.5552 10.5068 12.5897C10.6755 12.6757 10.9409 12.6928 11.1527 12.6313C11.3082 12.5862 11.3404 12.5591 11.9133 11.9912C12.6271 11.2838 12.657 11.239 12.6571 10.8779C12.6572 10.5679 12.6367 10.5272 12.1969 9.96044C12.0157 9.72697 11.8558 9.52072 11.8416 9.5021C11.8242 9.47925 11.8561 9.37661 11.9395 9.18715C12.0075 9.03255 12.0773 8.8608 12.0946 8.80554C12.1119 8.75024 12.1409 8.69385 12.1589 8.68016C12.177 8.6665 12.4558 8.62235 12.7785 8.58206C13.4302 8.5007 13.5637 8.45849 13.7504 8.27497C13.809 8.21738 13.8891 8.10164 13.9285 8.01781L14 7.86535V7.00266V6.13998L13.9282 5.98699C13.8887 5.90283 13.8097 5.78723 13.7525 5.73008C13.5713 5.54891 13.4311 5.50477 12.7785 5.42326C12.4558 5.38298 12.177 5.33883 12.1589 5.32516C12.1409 5.31147 12.1119 5.25508 12.0946 5.19979C12.0773 5.14452 12.0075 4.97278 11.9395 4.81818C11.8561 4.62872 11.8242 4.52607 11.8416 4.50323C11.8558 4.48461 12.0157 4.27836 12.1969 4.04488C12.3781 3.81141 12.5546 3.56493 12.5892 3.49715C12.6749 3.3291 12.6922 3.0635 12.6313 2.8515C12.5862 2.69482 12.5627 2.66738 11.9498 2.05471C11.3369 1.44204 11.3095 1.41857 11.1527 1.37354C10.9407 1.31261 10.675 1.32992 10.5068 1.41561C10.439 1.45017 10.1986 1.62265 9.9726 1.79892C9.41556 2.23333 9.48016 2.20427 9.2863 2.10765C9.19666 2.06298 9.03082 1.99218 8.91781 1.95034C8.80479 1.90849 8.6989 1.86043 8.68249 1.84356C8.66608 1.82666 8.61981 1.54893 8.57967 1.22634C8.49849 0.57393 8.45444 0.434038 8.27307 0.25271C8.21589 0.195581 8.10025 0.116542 8.01606 0.0770778L7.86301 0.00532428L7.0411 0.000531585C6.58904 -0.00207016 6.18219 0.00513258 6.13699 0.0165803ZM7.30241 4.09952C7.64074 4.13827 7.92923 4.21906 8.21855 4.35605C8.87074 4.66487 9.33874 5.13162 9.64392 5.77754C10.1705 6.89199 9.92444 8.22724 9.03384 9.08864C8.15164 9.94187 6.86819 10.162 5.77745 9.64703C5.44616 9.49062 5.22296 9.33698 4.96616 9.08864C4.07556 8.22724 3.82953 6.89199 4.35608 5.77754C4.83726 4.75911 5.82888 4.11089 6.9589 4.0761C7.01918 4.07424 7.17375 4.08479 7.30241 4.09952Z'
            fill='#8190A4'
          />
        </svg>`;

var activeScreen = 1;

const screen1 = `<div class='container main'>
<div style="margin-top:26px">
  <div class='d-flex top-head'>
	${ideaSvg} <h1 class='heading-text'> Content Ideas </h1>
  </div>
  <div id='btnSubmit' class='d-flex top-head'>
	${idcardSvg} <h1 class='heading-text-1'> Title & Introduction </h1>
  </div>
  <div id='btnSubmit1' class='d-flex top-head'>
	${cardSvg} <h1 class='heading-text-1'> Content Outline </h1>
  </div>
  <div id='btnSubmit2' class='d-flex top-head'>
	${writeSvg1} <h1 class='heading-text-1'> Al Write Assistant </h1>
  </div>
  <div id='btnSubmit3' class='d-flex top-head'>
	${documentSvg} <h1 class='heading-text-1'> Meta Title & Description </h1>
  </div>
  </div>
 </div>
`;

const screen2 = `<div class='container main'>
<div>
  <div>
	<div class='bg-title-btn'>
	  <div class='d-flex top-head'>
		${idcardSvg}
		<h1 class='heading-text'>Title & Introduction</h1>
	  </div>
	</div>
	<div class='textbox' style='height: 34px'>
	  <div class='pos-rel'>
		<label>Enter Keywords</label>
	  </div>
	  <textarea
		id='gtextarea'
		placeholder='Creating the best headlines'
	  ></textarea>
	</div>
	<button id="g1-title" class='greenbutton'>Generate Title</button>
  </div>
   </div>



</div>;

`;

const screen3 = `<div class='container main'>

<div>
  <div>
	<div class='bg-title-btn'>
	  <div class='d-flex top-head'>
		${cardSvg}
		<h1 class='heading-text'>Content Outline</h1>
	  </div>
	</div>
	<div class='textbox' style='height: 94px'>
	  <div class='pos-rel'>
		<label>Enter Keywords</label>
	  </div>
	  <textarea
		id='gtextarea1'
		placeholder='Walkng health benefits'
	  ></textarea>
	</div>
	<button id="g1-title1" class='greenbutton'>Generate Title</button>
  </div>

</div>

</div>;
`;
const screen4 = ` <div class='container main'>

<div>
  <div>
	<div class='bg-title-btn'>
	  <div class='d-flex top-head'>
		${writeSvg1}
		<h1 class='heading-text'>Al Write Assistant</h1>
	  </div>
	</div>

	<div class='w-assistant'>
	  <label>Content Length</label>
	  <div class='track'>
		<div class='t-1'></div>
		<div class='t-2'>
		  <div class='flex-main active'>
			<div class='tt-a'></div>
			<label>Short</label>
		  </div>
		  <div class='flex-main'>
			<div class='tt-u'></div>
			<label>Medium</label>
		  </div>
		  <div class='flex-main'>
			<div class='tt-u'></div>
			<label>Long</label>
		  </div>
		</div>
	  </div>
	</div>
	<div class='mt-write'>
	  <button class='greenbutton'>Write</button>
	</div>

	<div class='btn-whites'>
	  <button class='whitebutton'>Rewrite</button>
	  <button class='whitebutton'>Expand</button>
	  <button class='whitebutton'>Rephrase</button>
	</div>
  </div>
</div>
</div>;
`;
const screen5 = `

<div class='container main'>
  <div>
    <div>
      <div class='bg-title-btn'>
        <div class='d-flex top-head'>
          ${documentSvg}
          <h1 class='heading-text'>Meta Title & Description</h1>
        </div>
      </div>
      <div class='textbox' style='height: 34px'>
        <div class='pos-rel'>
          <label>Enter Keywords</label>
        </div>
        <textarea id='gtextarea2' placeholder='Creating SEO Titles'></textarea>
      </div>

      <button class='greenbutton' id='g1-title2'>Generate Introduction</button>
      <div class='textbox' style='height: 54px'>
        <div class='pos-rel'>
          <label>Describe Content</label>
        </div>
        <textarea
          id='gtextarea3'
          placeholder='Content explains how to create eye catching titles'
        ></textarea>
      </div>

      <button id='g1-title3' class='greenbutton'>Generate Introduction</button>
    </div>
  </div>

 </div>;

`;

function handleSliderInputChange(e, shadowRoot) {
  let target = e.target;
  if (e.target.type !== 'range') {
    target = shadowRoot.getElementById('range');
  }
  const min = target.min;
  const max = target.max;
  const val = target.value;

  target.style.backgroundSize = ((val - min) * 100) / (max - min) + '% 100%';
}

const checkElement = async (selector) => {
  while (document.querySelector(selector) === null) {
    await new Promise((resolve) => requestAnimationFrame(resolve));
  }
  return document.querySelector(selector);
};

document.addEventListener('DOMContentLoaded', async () => {
  try {
    checkElement('.edit-post-header__settings').then((selector) => {
      //create shadow dom
      const shadowEle = document.createElement('div');
      shadowEle.style = `
			    height: 100% ;
			`;
      const shadowRoot = shadowEle.attachShadow({
        mode: 'open',
      });
      // hiding settings container
      checkElement('*[aria-label^="Settings"]').then((selector) => {
        selector.addEventListener('click', function () {
          const cydBarElement = shadowRoot.querySelector(
            '.cydbar-toggler-open'
          );
          if (cydBarElement) {
            if (!selector.classList.contains('is-toggled')) {
              document.querySelector('#cydbar-toggler').click();
            }
          }
        });
      });
      //attach css
      let link = document.createElement('link');
      link.setAttribute('rel', 'stylesheet');
      link.setAttribute('href', `${chrome.runtime.getURL('style.css')}`);

      let fontLink = document.createElement('link');
      fontLink.setAttribute('rel', 'stylesheet');
      fontLink.setAttribute(
        'href',
        `https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700`
      );
      fontLink.setAttribute('type', 'text/css');

      //font-face should be placed in the <head> element of the HTML page
      document.head.appendChild(fontLink);

      shadowRoot.appendChild(link);

      const btn = document.createElement('button');
      btn.textContent = 'CYDBAR';
      btn.id = 'cydbar-toggler';
      btn.type = 'submit';
      btn.style = `
				outline: none !important;
				border: none !important;
				font-size: 0.8125rem !important;
				font-weight: bold !important;
				background: #0426bf !important;
				color: white !important;
				cursor: pointer !important;
				padding: 0.535rem !important;
				border-radius: 5px !important;		
				margin-left: 0.325rem !important;
				`;
      selector.appendChild(btn);

      //add sidebar

      const cydbarSidebar = document.createElement('div');

      cydbarSidebar.id = 'cydbarSidebar';
      cydbarSidebar.innerHTML = `

<div id="parent-body">
<button id="backbtn" class="back-btn" style="display:none">${backSvg}</button>

<div id="cst-1">${screen1}</div>
<div id="cst-2" style="display:none">${screen2}</div>
<div id="cst-3" style="display:none">${screen3}</div>
<div id="cst-4" style="display:none">${screen4}</div>
<div id="cst-5" style="display:none">${screen5}</div>

<div style="padding:10px">
  <div class='top-border cst-brd-margin'></div>

  <div>
    <div class='d-flex count-btn'>
      <h3>Word Count</h3>
      <p id='wordtotal'>0</p>
    </div>

    <div class='d-flex count-btn'>
      <h3>Characters</h3>
      <p id='wordcount'>0</p>
    </div>

    <div class='d-flex count-btn'>
      <h3>Pages</h3>
      <p>0</p>
    </div>
    <div class='top-border cst-brd-margin'></div>
    <div>
      <div class='d-flex top-head'>
        ${helpSvg}
        <h1 class='heading-text-1'>Help</h1>
      </div>

      <div class='d-flex top-head'>
        ${settingSvg}
        <h1 class='heading-text-1'>Settings</h1>
      </div>
    </div>
  </div>

  <div class='pos-rel'>
    <div class='admin-panel'>
      <div class='d-flex'>
        <div>
          <div class='sts'></div>
          <img src='https://i.ibb.co/Y0R8mF2/e1.png' alt='' />
        </div>
        <div>
          <h1>Dark_Emeralds</h1>
          <p>Admin</p>
        </div>
      </div>
      <div>
        <button>${moreSvg}</button>
      </div>
    </div>
  </div>
</div>

<div id="overlaybody" class="overlay">
    <div class="overlay__inner">
        <div class="overlay__content"><span class="spinner"></span></div>
    </div>
</div>
</div>
    `;
      //check wp versions and attach to their respective parent to shadow dom
      if (document.querySelector('.interface-interface-skeleton__body')) {
        //WordPress 5.7.2
        const style = `
				line-height: 1.4em !important;
				outline: 0 !important;
				display: block !important;
				flex-shrink: 0 !important;
				top: 0 !important;
				right: 0 !important;
				bottom: 0 !important;
				left: 0 !important;
				background: rgb(255, 255, 255) !important;
				color: rgb(30, 30, 30) !important;
				position: relative !important;
				font-size: 1.5em !important;
				border-left: 1px solid #e0e0e0 !important;
				width: 0;
				padding: 0;
				height: 100%;
				margin: 0;`;

        cydbarSidebar.style = style;
        cydbarSidebar.classList.add('wp-5-7-2');
        shadowRoot.appendChild(cydbarSidebar);
        document
          .querySelector('.interface-interface-skeleton__body')
          .appendChild(shadowEle);
      } else if (document.querySelector('.edit-post-layout')) {
        //WordPress 5.0.13
        const style = `
				    position: fixed;
				    right: -150px;
				    bottom: 0px;
				    margin: 0px;
				    border-left: 1px solid rgb(226, 228, 231);
				    width: 0px;
				    padding: 0px;
				    top: 88px !important;
				    background: rgb(255, 255, 255) !important;
				    color: rgb(30, 30, 30) !important;
				    font-size: 1.5em !important;
				    line-height: 1.4em !important;
				    outline: 0px !important;
				    display: block !important;
				    height: 100%;
				`;

        shadowEle.style = style;
        cydbarSidebar.classList.add('wp-5-0-13');

        shadowRoot.appendChild(cydbarSidebar);
        document.querySelector('.edit-post-layout').appendChild(shadowEle);
      }

      btn.addEventListener('click', (e) => {
        e.preventDefault();
        const settingBtnToggle = document.querySelector(
          '*[aria-label^="Settings"]'
        );
        if (!shadowRoot.querySelector('.cydbar-toggler-open')) {
          if (settingBtnToggle.classList.contains('is-toggled')) {
            settingBtnToggle.click();
          }
        }
        cydbarSidebar.classList.toggle('cydbar-toggler-open');
        if (cydbarSidebar.classList.contains('cydbar-toggler-open')) {
          if (shadowRoot.querySelector('.wp-5-0-13') !== null) {
            shadowEle.style = `
				    position: fixed;
				    right: 0px;
				    bottom: 0px;
				    margin: 0px;
				    border-left: 1px solid rgb(226, 228, 231);
				    width: fit-content;
				    padding: auto;
				    top: 88px !important;
				    background: rgb(255, 255, 255) !important;
				    color: rgb(30, 30, 30) !important;
				    font-size: 1.5em !important;
				    line-height: 1.4em !important;
				    outline: 0px !important;
				    display: block !important;
				    z-index:100
				`;
          } else if (shadowRoot.querySelector('.wp-5-7-2') !== null) {
          }
          cydbarSidebar.style = `
						width: 13.625rem !important;
						height: 100%;
						display: flex;
						align-items: center;
						flex-direction: column;
						position: relative;
    right: 5px;

				`;

          //   shadowRoot.querySelector('.accordion__footer').style = `
          // 				padding : 0 !important;
          // 				display:none;
          // 				`;

          //   shadowRoot.querySelector('footer').style = `
          // 		    display: none;
          // 			`;
        } else {
          if (cydbarSidebar.classList.contains('is-menu-open')) {
            cydbarSidebar.classList.remove('is-menu-open');
          }
          if (shadowRoot.querySelector('.wp-5-0-13') !== null) {
            const style = `
				    position: fixed;
				    right: -150px;
				    bottom: 0px;
				    margin: 0px;
				    width: 0px;
				    padding: 0px;
				    display: block !important;
				`;
            shadowEle.style = style;
          } else if (shadowRoot.querySelector('.wp-5-7-2') !== null) {
            cydbarSidebar.style = `
						width: 0 !important;
						padding: 0 !important;
				`;
          }
          shadowEle.shadowRoot
            .querySelectorAll('.cd-accordion > li > input')
            .forEach((i) => (i.checked = false));
          shadowEle.shadowRoot
            .querySelectorAll('.cd-accordion > li > input ~ label > span')
            .forEach((j) => {
              j.style.display = 'none';
            });
        }
      });
      //   shadowEle.shadowRoot
      //     .querySelector('.accordion__button__write')
      //     .addEventListener('click', () => {
      //       document.querySelectorAll('[contenteditable=true]')[0].textContent =
      //         ' data data data data';
      //     });

      let shadowBot = shadowEle.shadowRoot.querySelector('#btnSubmit');
      let shadowBot1 = shadowEle.shadowRoot.querySelector('#btnSubmit1');
      let shadowBot2 = shadowEle.shadowRoot.querySelector('#btnSubmit2');
      let shadowBot3 = shadowEle.shadowRoot.querySelector('#btnSubmit3');
      let backbtn = shadowEle.shadowRoot.querySelector('#backbtn');

      let textarea = shadowEle.shadowRoot.querySelector('#gtextarea');
      let textarea1 = shadowEle.shadowRoot.querySelector('#gtextarea1');
      let textarea2 = shadowEle.shadowRoot.querySelector('#gtextarea2');
      let textarea3 = shadowEle.shadowRoot.querySelector('#gtextarea3');
      let g1title = shadowEle.shadowRoot.querySelector('#g1-title');
      let g1title1 = shadowEle.shadowRoot.querySelector('#g1-title1');
      let g1title2 = shadowEle.shadowRoot.querySelector('#g1-title2');
      let g1title3 = shadowEle.shadowRoot.querySelector('#g1-title3');
      let overlaybody = shadowEle.shadowRoot.querySelector('#overlaybody');

      g1title.addEventListener('click', (e) => {
        if (textarea.value.length > 0) {
          e.preventDefault();
          overlaybody.style.display = 'initial';

          const req = new XMLHttpRequest();
          const baseUrl = 'https://api.aixsolutionsgroup.com/v1/compose';

          req.open('POST', baseUrl, true);
          req.setRequestHeader('Content-type', 'application/json');
          req.setRequestHeader('Accept', 'application/json');
          req.setRequestHeader('APIKey', APIKey);
          req.setRequestHeader('Access-Control-Allow-Credentials', 'true');

          req.send(
            JSON.stringify({
              prompt: textarea.value,
              token_max_length: 64,
              temperature: 0.7,
              top_p: 1,
              stop_sequence: '\n',
            })
          );

          req.onreadystatechange = function () {
            // Call a function when the state changes.
            if (
              this.readyState === XMLHttpRequest.DONE &&
              this.status === 200
            ) {
              console.log(JSON.parse(this.response).data.text, 'this');
              document.querySelectorAll(
                '[contenteditable=true]'
              )[0].textContent = JSON.parse(this.response).data.text;
              overlaybody.style.display = 'none';
            } else {
              overlaybody.style.display = 'none';
            }
          };
        }
      });
      g1title1.addEventListener('click', (e) => {
        if (textarea1.value.length > 0) {
          e.preventDefault();
          overlaybody.style.display = 'initial';

          const req = new XMLHttpRequest();
          const baseUrl = 'https://api.aixsolutionsgroup.com/v1/compose';

          req.open('POST', baseUrl, true);
          req.setRequestHeader('Content-type', 'application/json');
          req.setRequestHeader('Accept', 'application/json');
          req.setRequestHeader('APIKey', APIKey);
          req.setRequestHeader('Access-Control-Allow-Credentials', 'true');

          req.send(
            JSON.stringify({
              prompt: textarea1.value,
              token_max_length: 64,
              temperature: 0.7,
              top_p: 1,
              stop_sequence: '\n',
            })
          );

          req.onreadystatechange = function () {
            // Call a function when the state changes.
            if (
              this.readyState === XMLHttpRequest.DONE &&
              this.status === 200
            ) {
              console.log(JSON.parse(this.response).data.text, 'this');
              document.querySelectorAll(
                '[contenteditable=true]'
              )[0].textContent = JSON.parse(this.response).data.text;
              overlaybody.style.display = 'none';
            } else {
              overlaybody.style.display = 'none';
            }
          };
        }
      });
      g1title2.addEventListener('click', (e) => {
        if (textarea2.value.length > 0) {
          e.preventDefault();
          overlaybody.style.display = 'initial';

          const req = new XMLHttpRequest();
          const baseUrl = 'https://api.aixsolutionsgroup.com/v1/compose';

          req.open('POST', baseUrl, true);
          req.setRequestHeader('Content-type', 'application/json');
          req.setRequestHeader('Accept', 'application/json');
          req.setRequestHeader('APIKey', APIKey);
          req.setRequestHeader('Access-Control-Allow-Credentials', 'true');

          req.send(
            JSON.stringify({
              prompt: textarea2.value,
              token_max_length: 64,
              temperature: 0.7,
              top_p: 1,
              stop_sequence: '\n',
            })
          );

          req.onreadystatechange = function () {
            // Call a function when the state changes.
            if (
              this.readyState === XMLHttpRequest.DONE &&
              this.status === 200
            ) {
              console.log(JSON.parse(this.response).data.text, 'this');
              document.querySelectorAll(
                '[contenteditable=true]'
              )[0].textContent = JSON.parse(this.response).data.text;
              overlaybody.style.display = 'none';
            } else {
              overlaybody.style.display = 'none';
            }
          };
        }
      });
      g1title3.addEventListener('click', (e) => {
        if (textarea3.value.length > 0) {
          e.preventDefault();
          overlaybody.style.display = 'initial';

          const req = new XMLHttpRequest();
          const baseUrl = 'https://api.aixsolutionsgroup.com/v1/compose';

          req.open('POST', baseUrl, true);
          req.setRequestHeader('Content-type', 'application/json');
          req.setRequestHeader('Accept', 'application/json');
          req.setRequestHeader('APIKey', APIKey);
          req.setRequestHeader('Access-Control-Allow-Credentials', 'true');

          req.send(
            JSON.stringify({
              prompt: textarea3.value,
              token_max_length: 64,
              temperature: 0.7,
              top_p: 1,
              stop_sequence: '\n',
            })
          );

          req.onreadystatechange = function () {
            // Call a function when the state changes.
            if (
              this.readyState === XMLHttpRequest.DONE &&
              this.status === 200
            ) {
              console.log(JSON.parse(this.response).data.text, 'this');
              document.querySelectorAll(
                '[contenteditable=true]'
              )[0].textContent = JSON.parse(this.response).data.text;
              overlaybody.style.display = 'none';
            } else {
              overlaybody.style.display = 'none';
            }
          };
        }
      });

      textarea.addEventListener('keyup', (e) => {
        let wordtotal = shadowEle.shadowRoot.querySelector('#wordtotal');
        let wordcount = shadowEle.shadowRoot.querySelector('#wordcount');

        wordtotal.innerHTML = wordCount(textarea.value);
        wordcount.innerHTML = characterdCount(textarea.value);
      });
      textarea1.addEventListener('keyup', (e) => {
        let wordtotal = shadowEle.shadowRoot.querySelector('#wordtotal');
        let wordcount = shadowEle.shadowRoot.querySelector('#wordcount');

        wordtotal.innerHTML = wordCount(textarea1.value);
        wordcount.innerHTML = characterdCount(textarea1.value);
      });
      textarea2.addEventListener('keyup', (e) => {
        let wordtotal = shadowEle.shadowRoot.querySelector('#wordtotal');
        let wordcount = shadowEle.shadowRoot.querySelector('#wordcount');

        wordtotal.innerHTML = wordCount(textarea2.value);
        wordcount.innerHTML = characterdCount(textarea2.value);
      });
      textarea3.addEventListener('keyup', (e) => {
        let wordtotal = shadowEle.shadowRoot.querySelector('#wordtotal');
        let wordcount = shadowEle.shadowRoot.querySelector('#wordcount');

        wordtotal.innerHTML = wordCount(textarea3.value);
        wordcount.innerHTML = characterdCount(textarea3.value);
      });

      shadowBot.addEventListener('click', () => {
        shadowEle.shadowRoot.querySelector('#cst-1').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-3').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-4').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-5').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-2').style.display = 'block';
        shadowEle.shadowRoot.querySelector('#backbtn').style.display = 'flex';
      });
      backbtn.addEventListener('click', () => {
        shadowEle.shadowRoot.querySelector('#cst-1').style.display = 'block';
        shadowEle.shadowRoot.querySelector('#cst-3').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-4').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-5').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-2').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#backbtn').style.display = 'none';
      });
      shadowBot1.addEventListener('click', () => {
        shadowEle.shadowRoot.querySelector('#cst-1').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-2').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-4').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-5').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-3').style.display = 'block';
        shadowEle.shadowRoot.querySelector('#backbtn').style.display = 'flex';
      });
      shadowBot2.addEventListener('click', () => {
        shadowEle.shadowRoot.querySelector('#cst-1').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-2').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-3').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-5').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-4').style.display = 'block';
        shadowEle.shadowRoot.querySelector('#backbtn').style.display = 'flex';
      });
      shadowBot3.addEventListener('click', () => {
        shadowEle.shadowRoot.querySelector('#cst-1').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-2').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-3').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-4').style.display = 'none';
        shadowEle.shadowRoot.querySelector('#cst-5').style.display = 'block';
        shadowEle.shadowRoot.querySelector('#backbtn').style.display = 'flex';
      });

      const rangeInputs =
        shadowEle.shadowRoot.querySelectorAll('.accordion__slider');

      rangeInputs.forEach((input) => {
        input.addEventListener('input', (e) =>
          handleSliderInputChange(e, shadowRoot)
        );
      });

      const parentTogglers = shadowEle.shadowRoot.querySelectorAll(
        '.accordion__input__toggle'
      );
      parentTogglers.forEach((input) => {
        input.addEventListener('click', (e) => {
          //uncheck others and check if togglig the same element
          parentTogglers.forEach((el) => {
            if (el !== input) el.checked = false;
          });
        });
      });
      const rootOptions = shadowEle.shadowRoot.querySelectorAll(
        '.cd-accordion > li > input '
      );
      rootOptions.forEach((i) => {
        i.addEventListener('click', (e) => {
          //enlarge sidebar

          if (i.checked) {
            if (!cydbarSidebar.classList.contains('is-menu-open')) {
              cydbarSidebar.classList.add('is-menu-open');
            }
            shadowEle.shadowRoot
              .querySelectorAll('.cd-accordion > li > input ~ label > span')
              .forEach((j) => {
                j.style.display = 'block';
              });

            // shadowRoot.querySelector('.accordion__footer').style = `
            // 			display :flex;
            // 			justify-content:auto;
            // 			padding: 0px 0px 0px 0.9375rem !important;
            // 			align-items: center;
            // 			gap: 0.625em;
            // 			`;

            // shadowRoot.querySelector('footer').style = `
            // 			display :auto;
            // 			`;
            cydbarSidebar.style = `
    					padding: 0px 0 0 20px !important;
					overflow-y:scroll;
					display: flex;
    					flex-direction: column;
					height: 100%;
				`;
          }
        });
      });
    });
  } catch (error) {
    console.error(
      `Something went wrong, sorry... but here is a trace that could help to fix the problem`,
      error
    );
  }
});

window.onload = function () {};
